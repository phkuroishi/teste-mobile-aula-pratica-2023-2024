plugins {
    id("com.android.library")
}
apply from: "../../common.gradle"

android {
    namespace "de.danoeh.antennapod.playback.base"
}

dependencies {
    implementation project(':model')

    annotationProcessor "androidx.annotation:annotation:$annotationVersion"

    testImplementation "junit:junit:$junitVersion"
}
jacoco {
    toolVersion '0.8.7'
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "skipped", "passed", "failed"
        showStandardStreams true
        displayGranularity 2
    }
    jacoco {
        excludes = ['jdk.internal.*']
        includeNoLocationClasses = true
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*']
    def debugTree = fileTree(dir: "$buildDir/intermediates/javac/debug", excludes: fileFilter)
    def mainSrc = "$projectDir/src/main/java"


    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec"
    ]))
}
